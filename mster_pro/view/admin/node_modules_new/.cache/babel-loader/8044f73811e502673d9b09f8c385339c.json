{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\dashboard\\components\\userData.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\dashboard\\components\\userData.vue","mtime":1612255397000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.set\");\n\nrequire(\"core-js/modules/es6.string.iterator\");\n\nrequire(\"core-js/modules/es6.array.from\");\n\nvar _home = require(\"@/api/home\");\n\nvar _index = _interopRequireDefault(require(\"@/components/echarts/index\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: \"UserData\",\n  components: {\n    echartsFrom: _index.default\n  },\n  data: function data() {\n    return {\n      style: {\n        height: \"400px\"\n      },\n      optionData: {},\n      name: \"最近30天\",\n      fromList: {\n        title: \"选择时间\",\n        custom: true,\n        fromTxt: [{\n          text: \"最近7天\",\n          val: \"lately7\"\n        }, {\n          text: \"最近30天\",\n          val: \"lately30\"\n        }, {\n          text: \"本月\",\n          val: \"month\"\n        }]\n      }\n    };\n  },\n  mounted: function mounted() {\n    this.getList(\"lately30\");\n  },\n  methods: {\n    setTime: function setTime(val, text) {\n      this.name = text;\n      this.getList(val);\n    },\n    getList: function getList(val) {\n      var _this = this;\n\n      (0, _home.userDataApi)({\n        date: val\n      }).then(function (res) {\n        console.log(res);\n\n        if (res.status === 200) {\n          var userData = res.data;\n          var visitList = [];\n          var newUserList = [];\n          var userList = [];\n          var timer = [];\n          userData.map(function (item) {\n            newUserList.push(item.new);\n            userList.push(item.total);\n            visitList.push(item.visit);\n            timer.push(item.day);\n          });\n          var seriesData = [{\n            name: \"新用户\",\n            type: \"line\",\n            stack: \"用户量\",\n            itemStyle: {\n              normal: {\n                color: \"#5AD8A6\",\n                lineStyle: {\n                  color: \"#5AD8A6\"\n                }\n              }\n            },\n            data: newUserList,\n            smooth: false\n          }, {\n            name: \"访问用户\",\n            type: \"line\",\n            stack: \"用户量\",\n            itemStyle: {\n              normal: {\n                color: \"#5D7092\",\n                lineStyle: {\n                  color: \"#5D7092\"\n                }\n              }\n            },\n            data: visitList,\n            smooth: false\n          }, {\n            name: \"累计用户\",\n            type: \"line\",\n            stack: \"用户量\",\n            yAxisIndex: 1,\n            itemStyle: {\n              normal: {\n                color: \"#5B8FF9\",\n                lineStyle: {\n                  color: \"#5B8FF9\"\n                }\n              }\n            },\n            data: userList,\n            smooth: false\n          }];\n          _this.optionData = {\n            tooltip: {\n              trigger: \"axis\",\n              axisPointer: {\n                type: \"cross\",\n                label: {\n                  backgroundColor: \"#6a7985\"\n                }\n              }\n            },\n            legend: {\n              x: \"1px\",\n              y: \"10px\",\n              data: [\"新用户\", \"访问用户\", \"累计用户\"]\n            },\n            grid: {\n              left: \"0%\",\n              right: \"4%\",\n              bottom: \"3%\",\n              containLabel: true\n            },\n            axisLine: {\n              show: false\n            },\n            xAxis: [{\n              type: \"category\",\n              boundaryGap: true,\n              axisLine: {\n                show: false\n              },\n              axisTick: {\n                alignWithLabel: true,\n                lineStyle: {\n                  color: \"#D7DDE4\"\n                }\n              },\n              splitLine: {\n                show: false\n              },\n              axisLabel: {\n                interval: 0,\n                rotate: 40,\n                textStyle: {\n                  color: \"#7F8B9C\"\n                }\n              },\n              data: Array.from(new Set(timer))\n            }],\n            yAxis: [{\n              name: \"新/访\",\n              type: \"value\",\n              inverse: false,\n              boundaryGap: [\"0\", \"0.1\"] // splitLine: {\n              //   show: false\n              // }\n\n            }, {\n              name: \"累计用户\",\n              type: \"value\",\n              // minInterval: 1,\n              max: _this.arrayMax(userList) + 20,\n              min: _this.arrayMin(userList) - 10,\n              splitLine: {\n                show: false\n              }\n            }],\n            series: seriesData\n          };\n          _this.listLoading = false;\n        }\n      }).catch(function (res) {\n        _this.$message.error(res.message);\n      });\n    },\n    arrayMin: function arrayMin(arrs) {\n      var min = arrs[0];\n\n      for (var i = 1, ilen = arrs.length; i < ilen; i += 1) {\n        if (arrs[i] < min) {\n          min = arrs[i];\n        }\n      }\n\n      return min;\n    },\n    arrayMax: function arrayMax(arrs) {\n      var max = arrs[0];\n\n      for (var i = 1, ilen = arrs.length; i < ilen; i++) {\n        if (arrs[i] > max) {\n          max = arrs[i];\n        }\n      }\n\n      return max;\n    }\n  }\n};\nexports.default = _default;",null]}