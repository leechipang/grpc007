{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\store\\modules\\user.js","mtime":1594785735000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _user = require(\"@/api/user\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireWildcard(require(\"@/router\"));\n\nvar _sms = require(\"@/api/sms\");\n\nvar _jsCookie = _interopRequireDefault(require(\"js-cookie\"));\n\nvar state = {\n  token: (0, _auth.getToken)(),\n  name: '',\n  avatar: '',\n  introduction: '',\n  roles: [],\n  menuList: JSON.parse(localStorage.getItem('MerMenuList')),\n  isLogin: _jsCookie.default.get('isLogin')\n};\nvar mutations = {\n  SET_MENU_LIST: function SET_MENU_LIST(state, menuList) {\n    state.menuList = menuList;\n  },\n  SET_TOKEN: function SET_TOKEN(state, token) {\n    state.token = token;\n  },\n  SET_ISLOGIN: function SET_ISLOGIN(state, isLogin) {\n    state.isLogin = isLogin;\n\n    _jsCookie.default.set(isLogin);\n  },\n  SET_INTRODUCTION: function SET_INTRODUCTION(state, introduction) {\n    state.introduction = introduction;\n  },\n  SET_NAME: function SET_NAME(state, name) {\n    state.name = name;\n  },\n  SET_AVATAR: function SET_AVATAR(state, avatar) {\n    state.avatar = avatar;\n  },\n  SET_ROLES: function SET_ROLES(state, roles) {\n    state.roles = roles;\n  }\n};\nvar actions = {\n  // user login\n  login: function login(_ref, userInfo) {\n    var commit = _ref.commit;\n    // const { username, password } = userInfo\n    return new Promise(function (resolve, reject) {\n      (0, _user.login)(userInfo).then(function (response) {\n        var data = response.data;\n        commit('SET_TOKEN', data.token);\n\n        _jsCookie.default.set('AdminName', data.admin.account);\n\n        (0, _auth.setToken)(data.token);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // 短信是否登录\n  isLogin: function isLogin(_ref2, userInfo) {\n    var commit = _ref2.commit;\n    // const { username, password } = userInfo\n    return new Promise(function (resolve, reject) {\n      (0, _sms.isLoginApi)().then( /*#__PURE__*/function () {\n        var _ref3 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(res) {\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  commit('SET_ISLOGIN', res.data.status);\n                  resolve(res);\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref3.apply(this, arguments);\n        };\n      }()).catch(function (res) {\n        commit('SET_ISLOGIN', false);\n        reject(res);\n      });\n    });\n  },\n  getMenus: function getMenus(_ref4) {\n    var commit = _ref4.commit;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getMenusApi)().then(function (response) {\n        commit('SET_MENU_LIST', response.data);\n        localStorage.setItem('MerMenuList', JSON.stringify(response.data));\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // get user info\n  getInfo: function getInfo(_ref5) {\n    var commit = _ref5.commit,\n        state = _ref5.state;\n    return new Promise(function (resolve, reject) {\n      (0, _user.getInfo)(state.token).then(function (response) {\n        var data = response.data;\n\n        if (!data) {\n          reject('Verification failed, please Login again.');\n        }\n\n        var roles = data.roles,\n            name = data.name,\n            avatar = data.avatar,\n            introduction = data.introduction; // roles must be a non-empty array\n\n        if (!roles || roles.length <= 0) {\n          reject('getInfo: roles must be a non-null array!');\n        }\n\n        commit('SET_ROLES', roles);\n        commit('SET_NAME', name);\n        commit('SET_AVATAR', avatar);\n        commit('SET_INTRODUCTION', introduction);\n        resolve(data);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // user logout\n  logout: function logout(_ref6) {\n    var commit = _ref6.commit,\n        state = _ref6.state,\n        dispatch = _ref6.dispatch;\n    return new Promise(function (resolve, reject) {\n      (0, _user.logout)(state.token).then(function () {\n        commit('SET_TOKEN', '');\n        commit('SET_ROLES', []);\n        (0, _auth.removeToken)();\n        (0, _router.resetRouter)();\n\n        _jsCookie.default.remove(); // reset visited views and cached views\n        // to fixed https://github.com/PanJiaChen/vue-element-admin/issues/2485\n\n\n        dispatch('tagsView/delAllViews', null, {\n          root: true\n        });\n        resolve();\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  },\n  // remove token\n  resetToken: function resetToken(_ref7) {\n    var commit = _ref7.commit;\n    return new Promise(function (resolve) {\n      commit('SET_TOKEN', '');\n      commit('SET_ROLES', []);\n      (0, _auth.removeToken)();\n      resolve();\n    });\n  },\n  // dynamically modify permissions\n  changeRoles: function changeRoles(_ref8, role) {\n    var commit = _ref8.commit,\n        dispatch = _ref8.dispatch;\n    return new Promise( /*#__PURE__*/function () {\n      var _ref9 = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(resolve) {\n        var token, _yield$dispatch, roles, accessRoutes;\n\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                token = role + '-token';\n                commit('SET_TOKEN', token);\n                (0, _auth.setToken)(token);\n                _context2.next = 5;\n                return dispatch('getInfo');\n\n              case 5:\n                _yield$dispatch = _context2.sent;\n                roles = _yield$dispatch.roles;\n                (0, _router.resetRouter)(); // generate accessible routes map based on roles\n\n                _context2.next = 10;\n                return dispatch('permission/generateRoutes', roles, {\n                  root: true\n                });\n\n              case 10:\n                accessRoutes = _context2.sent;\n\n                // dynamically add accessible routes\n                _router.default.addRoutes(accessRoutes); // reset visited views and cached views\n\n\n                dispatch('tagsView/delAllViews', null, {\n                  root: true\n                });\n                resolve();\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x2) {\n        return _ref9.apply(this, arguments);\n      };\n    }());\n  }\n};\nvar _default = {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};\nexports.default = _default;",null]}