{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\dashboard\\components\\toDay.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\dashboard\\components\\toDay.vue","mtime":1609299900000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _home = require(\"@/api/home\");\n\nvar _index = _interopRequireDefault(require(\"@/components/echarts/index\"));\n\nvar _echarts = _interopRequireDefault(require(\"echarts\"));\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ToDay',\n  components: {\n    echartsFrom: _index.default\n  },\n  data: function data() {\n    return {\n      style: {\n        height: '200px'\n      },\n      styleToday: {\n        height: '130px'\n      },\n      legendData: ['今天', '昨天'],\n      seriesData: [],\n      timer: [],\n      grid: {\n        xl: 12,\n        lg: 12,\n        md: 12,\n        sm: 24,\n        xs: 24\n      },\n      statisticsData: {},\n      orderData: {},\n      orderUserData: {},\n      optionData: {},\n      listLoading: false,\n      optionDataOrder: {},\n      optionOrderUser: {}\n    };\n  },\n  beforeDestroy: function beforeDestroy() {\n    if (this.visitChart) {\n      this.visitChart.dispose();\n      this.visitChart = null;\n    }\n  },\n  mounted: function mounted() {\n    this.getList();\n    this.getOrder();\n    this.getOrderUser();\n  },\n  methods: {\n    getList: function getList() {\n      var _this = this;\n\n      this.listLoading = true;\n      (0, _home.statisticsOrderApi)().then(function (res) {\n        if (res.status === 200) {\n          _this.statisticsData = res.data;\n\n          var dataList = _this.statisticsData.order.filter(function (item) {\n            return item.yesterday !== 0 || item.today !== 0;\n          });\n\n          dataList.unshift({\n            time: '00:00',\n            today: 0,\n            yesterday: 0\n          });\n          var seriesData = [{\n            name: '今天',\n            type: 'line',\n            stack: '订单额',\n            areaStyle: {\n              normal: {\n                color: new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: '#5B8FF9'\n                }, {\n                  offset: 0.5,\n                  color: '#fff'\n                }, {\n                  offset: 1,\n                  color: '#fff'\n                }])\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: '#5B8FF9',\n                lineStyle: {\n                  color: '#5B8FF9'\n                }\n              }\n            },\n            data: dataList.map(function (item) {\n              return Number(item.today);\n            }),\n            smooth: true\n          }, {\n            name: '昨天',\n            type: 'line',\n            stack: '订单额',\n            areaStyle: {\n              normal: {\n                color: new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: '#BFBFBF'\n                }, {\n                  offset: 0.5,\n                  color: '#fff'\n                }, {\n                  offset: 1,\n                  color: '#fff'\n                }])\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: '#D9D9D9',\n                lineStyle: {\n                  color: '#D9D9D9'\n                }\n              }\n            },\n            data: dataList.map(function (item) {\n              return Number(item.yesterday);\n            })\n          }];\n          _this.optionData = {\n            tooltip: {\n              trigger: 'axis'\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: _this.legendData\n            },\n            grid: {\n              left: '0%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            xAxis: [{\n              boundaryGap: false,\n              data: dataList.map(function (item) {\n                return item.time;\n              }),\n              axisLine: {\n                show: false\n              },\n              show: false\n            }],\n            yAxis: {\n              show: false\n            },\n            series: seriesData\n          };\n          _this.listLoading = false;\n        }\n      }).catch(function (res) {\n        _this.listLoading = false;\n\n        _this.$message.error(res.message);\n      });\n    },\n    getOrder: function getOrder() {\n      var _this2 = this;\n\n      (0, _home.statisticsOrderNumApi)().then(function (res) {\n        if (res.status === 200) {\n          _this2.orderData = res.data;\n\n          var dataList = _this2.orderData.today.filter(function (item) {\n            return item.total !== 0;\n          });\n\n          dataList.unshift({\n            time: '00:00',\n            total: 0\n          });\n          var seriesData = [{\n            name: '今天',\n            type: 'line',\n            stack: '订单额',\n            areaStyle: {\n              normal: {\n                color: new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: '#5B8FF9'\n                }, {\n                  offset: 0.5,\n                  color: '#fff'\n                }, {\n                  offset: 1,\n                  color: '#fff'\n                }])\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: '#5B8FF9',\n                lineStyle: {\n                  color: '#5B8FF9'\n                }\n              }\n            },\n            data: dataList.map(function (item) {\n              return item.total;\n            }),\n            smooth: true\n          }];\n          _this2.optionDataOrder = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985'\n                }\n              }\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: ['今天']\n            },\n            grid: {\n              left: '0%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            axisLine: {\n              show: false\n            },\n            xAxis: [{\n              type: 'category',\n              boundaryGap: false,\n              data: dataList.map(function (item) {\n                return item.time;\n              }),\n              axisLine: {\n                show: false\n              },\n              show: false\n            }],\n            yAxis: {\n              show: false\n            },\n            series: seriesData\n          };\n        }\n      }).catch(function (res) {\n        _this2.$message.error(res.message);\n      });\n    },\n    getOrderUser: function getOrderUser() {\n      var _this3 = this;\n\n      (0, _home.statisticsOrderUserApi)().then(function (res) {\n        if (res.status === 200) {\n          _this3.orderUserData = res.data;\n\n          var dataList = _this3.orderUserData.today.filter(function (item) {\n            return item.total !== 0;\n          });\n\n          dataList.unshift({\n            time: '00:00',\n            total: 0\n          });\n          var seriesData = [{\n            name: '今天',\n            type: 'line',\n            stack: '人数',\n            areaStyle: {\n              normal: {\n                color: new _echarts.default.graphic.LinearGradient(0, 0, 0, 1, [{\n                  offset: 0,\n                  color: '#5B8FF9'\n                }, {\n                  offset: 0.5,\n                  color: '#fff'\n                }, {\n                  offset: 1,\n                  color: '#fff'\n                }])\n              }\n            },\n            itemStyle: {\n              normal: {\n                color: '#5B8FF9',\n                lineStyle: {\n                  color: '#5B8FF9'\n                }\n              }\n            },\n            data: dataList.map(function (item) {\n              return item.total;\n            }),\n            smooth: true\n          }];\n          _this3.optionOrderUser = {\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  backgroundColor: '#6a7985'\n                }\n              }\n            },\n            legend: {\n              x: '1px',\n              y: '10px',\n              data: ['今天']\n            },\n            grid: {\n              left: '0%',\n              right: '4%',\n              bottom: '3%',\n              containLabel: true\n            },\n            axisLine: {\n              show: false\n            },\n            xAxis: [{\n              type: 'category',\n              boundaryGap: false,\n              data: dataList.map(function (item) {\n                return item.time;\n              }),\n              axisLine: {\n                show: false\n              },\n              show: false\n            }],\n            yAxis: {\n              show: false\n            },\n            series: seriesData\n          };\n        }\n      }).catch(function (res) {\n        _this3.$message.error(res.message);\n      });\n    }\n  }\n};\nexports.default = _default;",null]}