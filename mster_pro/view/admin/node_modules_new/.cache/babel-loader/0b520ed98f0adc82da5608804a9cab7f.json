{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\permission.js","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\permission.js","mtime":1607484373000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nrequire(\"regenerator-runtime/runtime\");\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"D:/phpstudy_pro/WWW/master/view/admin/node_modules/@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _router = _interopRequireDefault(require(\"./router\"));\n\nvar _store = _interopRequireDefault(require(\"./store\"));\n\nvar _nprogress = _interopRequireDefault(require(\"nprogress\"));\n\nrequire(\"nprogress/nprogress.css\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _getPageTitle = _interopRequireDefault(require(\"@/utils/get-page-title\"));\n\nvar _settings = require(\"@/settings\");\n\nvar _user = require(\"@/api/user\");\n\n// progress bar\n// progress bar style\n// get token from cookie\n_nprogress.default.configure({\n  showSpinner: false\n}); // NProgress Configuration\n\n\nvar whiteList = [\"\".concat(_settings.roterPre, \"/login\"), '/auth-redirect']; // no redirect whitelist\n\n_router.default.beforeEach( /*#__PURE__*/function () {\n  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/regeneratorRuntime.mark(function _callee(to, from, next) {\n    var hasToken;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // start progress bar\n            _nprogress.default.start(); // set page title\n\n\n            document.title = (0, _getPageTitle.default)(to.meta.title); // determine whether the user has logged in\n\n            hasToken = (0, _auth.getToken)();\n\n            if (!hasToken) {\n              _context.next = 7;\n              break;\n            }\n\n            if (to.path === \"\".concat(_settings.roterPre, \"/login\")) {\n              // if is logged in, redirect to the home page\n              next({\n                path: '/'\n              });\n\n              _nprogress.default.done();\n            } else {\n              // await store.dispatch('user/getMenus')\n              if (from.fullPath === '/' && from.path !== \"\".concat(_settings.roterPre, \"/login\")) {\n                (0, _user.editFormApi)().then(function (res) {\n                  next();\n\n                  _nprogress.default.done();\n                }).catch(function (res) {\n                  next();\n\n                  _nprogress.default.done();\n                });\n              } else {\n                next();\n\n                _nprogress.default.done();\n              }\n            }\n\n            _context.next = 15;\n            break;\n\n          case 7:\n            if (!(whiteList.indexOf(to.path) !== -1)) {\n              _context.next = 11;\n              break;\n            }\n\n            // in the free login whitelist, go directly\n            next();\n            _context.next = 15;\n            break;\n\n          case 11:\n            _context.next = 13;\n            return _store.default.dispatch('user/resetToken');\n\n          case 13:\n            next(\"\".concat(_settings.roterPre, \"/login?redirect=\").concat(to.path));\n\n            _nprogress.default.done();\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}());\n\n_router.default.afterEach(function () {\n  // finish progress bar\n  _nprogress.default.done();\n});",null]}