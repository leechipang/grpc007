{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\merchant\\list\\record.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\merchant\\list\\record.vue","mtime":1617711255678},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n    merOrderListApi,\n    refundOrderListApi,\n    orderMarkApi,\n    refundMarkApi,\n    reconciliationApi\n} from '@/api/merchant'\nimport {\n    reconciliationOrderApi,\n    reconciliationRefundApi\n} from '@/api/accounts'\nimport {\n    roterPre\n} from '@/settings'\nexport default {\n    name: 'Record',\n    data() {\n        return {\n            roterPre: roterPre,\n            chkName: '',\n            chkNameRefund: '',\n            isIndeterminate: true,\n            resource: [],\n            visible: false,\n            timeVal: [],\n            pickerOptions: {\n                shortcuts: [{\n                    text: '最近一周',\n                    onClick(picker) {\n                        const end = new Date()\n                        const start = new Date()\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7)\n                        picker.$emit('pick', [start, end])\n                    }\n                }, {\n                    text: '最近一个月',\n                    onClick(picker) {\n                        const end = new Date()\n                        const start = new Date()\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30)\n                        picker.$emit('pick', [start, end])\n                    }\n                }, {\n                    text: '最近三个月',\n                    onClick(picker) {\n                        const end = new Date()\n                        const start = new Date()\n                        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90)\n                        picker.$emit('pick', [start, end])\n                    }\n                }]\n            },\n            listLoading: true,\n            tableData: {\n                data: [],\n                total: 0\n            },\n            tableDataRefund: {\n                data: [],\n                total: 0\n            },\n            tableFrom: {\n                page: 1,\n                limit: 10,\n                date: '',\n                status: ''\n            },\n            ids: [],\n            idsRefund: [],\n            checkedPage: [],\n            checkedIds: [], // 订单当前页选中的数据\n            noChecked: [], // 订单全选状态下当前页不选中的数据\n            refundCheckedIds: [], // 退款单当前页选中的数据\n            refundNoChecked: [] // 退款单全选状态下当前页不选中的数据\n        }\n    },\n    mounted() {\n        this.init()\n    },\n    created() {\n        this.tempRoute = Object.assign({}, this.$route)\n    },\n    methods: {\n        isDisabled(row) {\n            if (row.status !== 3) {\n                return false\n            }\n            return true\n        },\n        init() {\n            this.tableFrom.page = 1\n            this.getList()\n            this.getRefundList()\n            if (this.$route.params.type === 0) {\n                this.setTagsViewTitle()\n            }\n        },\n        // 订单\n        onHandle(name) {\n            this.chkName = this.chkName === name ? '' : name\n            this.changeType(!(this.chkName === ''))\n        },\n        changeOne(v, order) {\n            if (v) {\n                if (this.chkName === 'duo') {\n                    const index = this.noChecked.indexOf(order.order_id)\n                    if (index > -1) this.noChecked.splice(index, 1)\n                } else {\n                    const index = this.checkedIds.indexOf(order.order_id)\n                    if (index === -1) this.checkedIds.push(order.order_id)\n                }\n            } else {\n                if (this.chkName === 'duo') {\n                    const index = this.noChecked.indexOf(order.order_id)\n                    if (index === -1) this.noChecked.push(order.order_id)\n                } else {\n                    const index = this.checkedIds.indexOf(order.order_id)\n                    if (index > -1) this.checkedIds.splice(index, 1)\n                }\n            }\n        },\n        changeType(v) {\n            if (v) {\n                if (!this.chkName) {\n                    this.chkName = 'dan'\n                }\n            } else {\n                this.chkName = ''\n            }\n            const index = this.checkedPage.indexOf(this.tableFrom.page)\n            if (this.chkName === 'dan') {\n                this.checkedPage.push(this.tableFrom.page)\n            } else if (index > -1) {\n                this.checkedPage.splice(index, 1)\n            }\n            this.syncCheckedId()\n        },\n        syncCheckedId() {\n            const ids = this.tableData.data.map(v => v.order_id)\n            if (this.chkName === 'duo') {\n                this.checkedIds = []\n            } else if (this.chkName === 'dan') {\n                ids.forEach(id => {\n                    const index = this.checkedIds.indexOf(id)\n                    if (index === -1) {\n                        this.checkedIds.push(id)\n                    }\n                })\n            } else {\n                ids.forEach(id => {\n                    const index = this.checkedIds.indexOf(id)\n                    if (index > -1) {\n                        this.checkedIds.splice(index, 1)\n                    }\n                })\n            }\n        },\n        // 退款订单\n        onHandleRefund(name) {\n            this.chkNameRefund = this.chkNameRefund === name ? '' : name\n            this.changeTypeRefund(!(this.chkNameRefund === ''))\n        },\n        changeOneRefund(v, order) {\n            if (v) {\n                if (this.chkNameRefund === 'duo') {\n                    const index = this.refundNoChecked.indexOf(order.refund_order_id)\n                    if (index > -1) this.refundNoChecked.splice(index, 1)\n                } else {\n                    const index = this.refundCheckedIds.indexOf(order.refund_order_id)\n                    if (index === -1) this.refundCheckedIds.push(order.refund_order_id)\n                }\n            } else {\n                if (this.chkNameRefund === 'duo') {\n                    const index = this.refundNoChecked.indexOf(order.refund_order_id)\n                    if (index === -1) this.refundNoChecked.push(order.refund_order_id)\n                } else {\n                    const index = this.refundCheckedIds.indexOf(order.refund_order_id)\n                    if (index > -1) this.refundCheckedIds.splice(index, 1)\n                }\n            }\n        },\n        changeTypeRefund(v) {\n            if (v) {\n                if (!this.chkNameRefund) {\n                    this.chkNameRefund = 'dan'\n                }\n            } else {\n                this.chkNameRefund = ''\n            }\n            const index = this.checkedPage.indexOf(this.tableFrom.page)\n            if (this.chkNameRefund === 'dan') {\n                this.checkedPage.push(this.tableFrom.page)\n            } else if (index > -1) {\n                this.checkedPage.splice(index, 1)\n            }\n            this.syncCheckedIdRefund()\n        },\n        syncCheckedIdRefund() {\n            const ids = this.tableDataRefund.data.map(v => v.refund_order_id)\n            if (this.chkNameRefund === 'duo') {\n                this.refundCheckedIds = []\n            } else if (this.chkNameRefund === 'dan') {\n                ids.forEach(id => {\n                    const index = this.refundCheckedIds.indexOf(id)\n                    if (index === -1) {\n                        this.refundCheckedIds.push(id)\n                    }\n                })\n            } else {\n                ids.forEach(id => {\n                    const index = this.refundCheckedIds.indexOf(id)\n                    if (index > -1) {\n                        this.refundCheckedIds.splice(index, 1)\n                    }\n                })\n            }\n        },\n        onAdd() {\n            // if (this.ids.length === 0 || this.idsRefund.length === 0) return this.$message.warning('请先选择对账单')\n            const datas = {\n                order_ids: this.checkedIds,\n                order_out_ids: this.noChecked,\n                order_type: this.chkName === 'duo' ? 1 : 0,\n                refund_order_ids: this.refundCheckedIds,\n                refund_out_ids: this.refundNoChecked,\n                refund_type: this.chkNameRefund === 'duo' ? 1 : 0,\n                date: this.tableFrom.date\n            }\n            this.$modalSure('发起商户对账吗').then(() => {\n                reconciliationApi(this.$route.params.id, datas, ).then(({\n                    message\n                }) => {\n                    this.$message.success(message)\n                    this.tableFrom.page = 1\n                    this.getList()\n                    this.getRefundList()\n                    this.chkName = ''\n                    this.chkNameRefund = ''\n                    this.refundCheckedIds = []\n                    this.checkedIds = []\n                    this.noChecked = []\n                    this.refundNoChecked = []\n                }).catch(({\n                    message\n                }) => {\n                    this.$message.error(message)\n                })\n            })\n        },\n        // 具体日期\n        onchangeTime(e) {\n            this.timeVal = e\n            this.tableFrom.date = this.timeVal ? this.timeVal.join('-') : ''\n            this.tableFrom.page = 1\n            this.getList()\n            this.getRefundList()\n        },\n        // 退款备注\n        onOrderMark(id) {\n            this.$modalForm(refundMarkApi(id)).then(() => this.getRefundList())\n        },\n        // 订单备注\n        addMark(id) {\n            this.$modalForm(orderMarkApi(id)).then(() => this.getList())\n        },\n        getTotalRefund(row) {\n            let sum = 0\n            for (let i = 0; i < row.length; i++) {\n                sum += row[i].product.cart_info.productAttr.price * row[i].refund_num\n            }\n            return sum\n        },\n        getTotal(row) {\n            let sum = 0\n            for (let i = 0; i < row.length; i++) {\n                sum += row[i].cart_info.productAttr.price * row[i].product_num\n            }\n            return sum\n        },\n        // 列表\n        getList() {\n            this.listLoading = true\n            this.$route.params.type === '1' ? merOrderListApi(this.$route.params.id, this.tableFrom).then(res => {\n                this.tableData.data = res.data.list\n                this.tableData.total = res.data.count\n                this.tableData.data.map((item) => {\n                    this.$set(item, {\n                        checked: false\n                    })\n                })\n                this.listLoading = false\n            }).catch(res => {\n                this.listLoading = false\n                this.$message.error(res.message)\n            }) : reconciliationOrderApi(this.$route.params.id, this.tableFrom).then(res => {\n                this.tableData.data = res.data.list\n                this.tableData.total = res.data.count\n                this.tableData.data.map((item) => {\n                    this.$set(item, {\n                        checked: false\n                    })\n                })\n                this.listLoading = false\n            }).catch(res => {\n                this.listLoading = false\n                this.$message.error(res.message)\n            })\n        },\n        pageChange(page) {\n            this.tableFrom.page = page\n            this.getList()\n        },\n        handleSizeChange(val) {\n            this.tableFrom.limit = val\n            this.chkName = ''\n            this.getList()\n        },\n        // 退款列表\n        getRefundList() {\n            this.listLoading = true\n            this.$route.params.type === '1' ? refundOrderListApi(this.$route.params.id, this.tableFrom).then(res => {\n                this.tableDataRefund.data = res.data.list\n                this.tableDataRefund.total = res.data.count\n                this.listLoading = false\n            }).catch(res => {\n                this.listLoading = false\n                this.$message.error(res.message)\n            }) : reconciliationRefundApi(this.$route.params.id, this.tableFrom).then(res => {\n                this.tableDataRefund.data = res.data.list\n                this.tableDataRefund.total = res.data.count\n                this.listLoading = false\n            }).catch(res => {\n                this.listLoading = false\n                this.$message.error(res.message)\n            })\n        },\n        pageChangeRefund(page) {\n            this.tableFrom.page = page\n            this.getRefundList()\n        },\n        handleSizeChangeRefund(val) {\n            this.tableFrom.limit = val\n            this.getRefundList()\n        },\n        setTagsViewTitle() {\n            const title = '查看订单'\n            const route = Object.assign({}, this.tempRoute, {\n                title: `${title}-${this.$route.params.id}`\n            })\n            this.$store.dispatch('tagsView/updateVisitedView', route)\n        }\n    }\n}\n",null]}