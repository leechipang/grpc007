{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\app\\wechat\\wxTemplate\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\app\\wechat\\wxTemplate\\index.vue","mtime":1595317593000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { templateListApi, templateStatusApi, templateCreateApi, templateupdateApi, templateDeleteApi, routineListApi, routineCreateApi, routineUpdateApi, routineDeleteApi, routineStatusApi } from '@/api/app'\nimport * as constants from '@/libs/constants.js'\nexport default {\n  name: 'Template',\n  data() {\n    return {\n      switchData: constants.switchStatus,\n      tableFrom: {\n        page: 1,\n        limit: 20,\n        status: '',\n        keyword: ''\n      },\n      tableData: {\n        data: [],\n        total: 0\n      },\n      listLoading: true,\n      tempId: null\n    }\n  },\n  mounted() {\n    this.getList()\n  },\n  methods: {\n    // 删除\n    handleDelete(id, idx) {\n      this.$modalSure().then(() => {\n        this.$route.path.indexOf('wechat') !== -1 ? templateDeleteApi(id).then(() => {\n          this.$message.success('删除成功')\n          this.tableData.data.splice(idx, 1)\n        }).catch((res) => {\n          this.$message.error(res.message)\n        }) : routineDeleteApi(id).then(() => {\n          this.$message.success('删除成功')\n          this.tableData.data.splice(idx, 1)\n        }).catch((res) => {\n          this.$message.error(res.message)\n        })\n      })\n    },\n    // 添加\n    onAdd() {\n      this.$modalForm(this.$route.path.indexOf('wechat') !== -1 ? templateCreateApi() : routineCreateApi()).then(() => this.getList())\n    },\n    // 编辑\n    onEdit(id) {\n      this.$modalForm(this.$route.path.indexOf('wechat') !== -1 ? templateupdateApi(id) : routineUpdateApi(id)).then(() => this.getList())\n    },\n    // 列表\n    getList() {\n      this.listLoading = true\n      this.$route.path.indexOf('wechat') !== -1 ? templateListApi(this.tableFrom).then(res => {\n        this.tableData.data = res.data.list || []\n        this.tableData.total = res.data.count\n        this.listLoading = false\n      }).catch((res) => {\n        this.tableData.data = []\n        this.listLoading = false\n        this.$message.error(res.message)\n      }) : routineListApi(this.tableFrom).then(res => {\n        this.tableData.data = res.data.list || []\n        this.tableData.total = res.data.count\n        this.listLoading = false\n      }).catch((res) => {\n        this.tableData.data = []\n        this.listLoading = false\n        this.$message.error(res.message)\n      })\n    },\n    pageChange(page) {\n      this.tableFrom.page = page\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.tableFrom.limit = val\n      this.getList()\n    },\n    // 修改状态\n    onchangeIsShow(row) {\n      this.$route.path.indexOf('wechat') !== -1 ? templateStatusApi(row.template_id, { status: row.status }).then(() => {\n        this.$message.success('修改成功')\n        this.getList()\n      }).catch((res) => {\n        this.$message.error(res.message)\n      }) : routineStatusApi(row.template_id, { status: row.status }).then(() => {\n        this.$message.success('修改成功')\n        this.getList()\n      }).catch((res) => {\n        this.$message.error(res.message)\n      })\n    }\n  }\n}\n",null]}