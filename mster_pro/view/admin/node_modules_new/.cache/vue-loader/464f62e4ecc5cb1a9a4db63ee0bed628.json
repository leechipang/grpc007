{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\systemForm\\setSystem\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\systemForm\\setSystem\\index.vue","mtime":1595847112000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapGetters } from 'vuex'\nimport formCreate from '@form-create/element-ui'\nimport { configApi, uploadApi } from '@/api/systemForm'\nimport request from '@/api/request'\nimport { roterPre } from '@/settings'\nexport default {\n  name: 'Basics',\n  components: { formCreate: formCreate.$form() },\n  data() {\n    return {\n      roterPre: roterPre,\n      option: {\n        form: {\n          labelWidth: '150px'\n        },\n        global: {\n          upload: {\n            props: {\n              onSuccess(rep, file) {\n                if (rep.status === 200) { file.url = rep.data.src }\n              }\n            }\n          }\n        }\n      },\n      FromData: null,\n      titles: ''\n    }\n  },\n  mounted() {\n    this.setTagsViewTitle()\n    this.getFrom()\n  },\n  computed: {\n    ...mapGetters(['menuList'])\n  },\n  created() {\n    this.tempRoute = Object.assign({}, this.$route)\n  },\n  methods: {\n    getFrom() {\n      this.$route.params.key === 'upload' ? uploadApi().then(async res => {\n        this.FromData = res.data\n      }).catch(res => {\n        this.$message.error(res.message)\n      }) : configApi(this.$route.params.key).then(async res => {\n        this.FromData = res.data\n      }).catch(res => {\n        this.$message.error(res.message)\n      })\n    },\n    onSubmit(formData) {\n      request[this.FromData.method.toLowerCase()](this.FromData.action.slice(5), formData).then((res) => {\n        this.$message.success(res.message || '提交成功')\n      }).catch(err => {\n        this.$message.error(err.message || '提交失败')\n      })\n    },\n    setTagsViewTitle() {\n      this.deepTraversal(this.menuList, 'children')\n      const route = Object.assign({}, this.tempRoute, { title: this.titles })\n      this.$store.dispatch('tagsView/updateVisitedView', route)\n    },\n    deepTraversal(arr, child) {\n      const that = this\n      function traversal(a) {\n        a.forEach(o => {\n          if (o.route.indexOf('Basics') !== -1 && o.route === that.$route.path) {\n            that.titles = o.menu_name\n            return\n          }\n          if (o[child] && o[child].length) {\n            traversal(o[child])\n          }\n        })\n      }\n      traversal(arr)\n    }\n  }\n}\n",null]}