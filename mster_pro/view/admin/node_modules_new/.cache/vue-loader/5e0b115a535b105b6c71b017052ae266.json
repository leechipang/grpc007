{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\system\\groupData\\data.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\system\\groupData\\data.vue","mtime":1601293043000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  createGroupData,\n  updateGroupData,\n  groupDataLst,\n  deleteGroupData,\n  groupDetail,\n  statusGroupData\n} from '@/api/system'\nimport { roterPre } from '@/settings'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'Data',\n  data() {\n    return {\n      roterPre: roterPre,\n      tableData: {\n        page: 1,\n        limit: 20,\n        data: [],\n        total: 0\n      },\n      groupId: null,\n      loading: false,\n      groupDetail: null,\n      titles: ''\n    }\n  },\n  computed: {\n    columns() {\n      if (!this.groupDetail) return []\n      const colums = [\n        {\n          title: 'ID',\n          key: 'group_data_id',\n          minWidth: 60\n        }]\n      if(this.groupDetail.fields)\n        this.groupDetail.fields.forEach((val) => {\n        colums.push({\n          title: val\n            .name,\n          key:\n          val.field,\n          minWidth:\n            80\n        })\n      })\n      colums.push(\n        {\n          title: '添加时间',\n          key: 'create_time',\n          minWidth: 200\n        },\n        // {\n        //   title: '状态',\n        //   key: 'status',\n        //   minWidth: 80\n        // },\n        // {\n        //   title: '操作',\n        //   slot: 'action',\n        //   minWidth: 120,\n        //   fixed: 'right'\n        // }\n      )\n\n      return colums\n    },\n    ...mapGetters(['menuList'])\n  },\n  watch: {\n    '$route.params.id': function(n) {\n      this.groupId = n\n    },\n    groupId(n) {\n      this.getGroupDetail(n)\n    }\n  },\n  mounted() {\n    this.groupId = this.$route.params.id\n  },\n  created() {\n    this.tempRoute = Object.assign({}, this.$route)\n  },\n  methods: {\n    // 返回\n    back() {\n      this.$router.push({ path: `${roterPre}/group/list` })\n    },\n    getGroupDetail(id) {\n      groupDetail(id).then(res => {\n        this.groupDetail = res.data\n        this.tableData.page = 1\n        this.setTagsViewTitle(res.data.group_name)\n        this.getList()\n      }).catch(res => {\n        this.$message.error(res.message)\n      })\n    },\n    // 列表\n    getList() {\n      if (!this.groupId) return\n      this.loading = false\n      groupDataLst(this.$route.params.id, this.tableData.page, this.tableData.limit).then(res => {\n        this.tableData.data = res.data.list\n        this.tableData.total = res.data.count\n        this.loading = false\n      }).catch(({ message }) => {\n        this.loading = false\n        this.$message.error(message)\n      })\n    },\n    pageChange(page) {\n      this.tableData.page = page\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.tableData.limit = val\n      this.getList()\n    },\n    // 添加\n    onAdd() {\n      this.$modalForm(createGroupData(this.$route.params.id)).then(() => this.getList())\n    },\n    // 编辑\n    onEdit(id) {\n      this.$modalForm(updateGroupData(this.$route.params.id, id)).then(() => this.getList())\n    },\n    onchangeIsShow(row) {\n      statusGroupData(row.group_data_id, { status: row.status }).then(({ message }) => {\n        this.$message.success(message)\n        this.getList()\n      }).catch(({ message }) => {\n        this.$message.error(message)\n      })\n    },\n    // 删除\n    handleDelete(id, idx) {\n      this.$modalSure().then(() => {\n        deleteGroupData(id).then(({ message }) => {\n          this.$message.success(message)\n          this.tableData.data.splice(idx, 1)\n        }).catch(({ message }) => {\n          this.$message.error(message)\n        })\n      })\n    },\n    setTagsViewTitle(title) {\n      const route = Object.assign({}, this.tempRoute, { title: title })\n      this.$store.dispatch('tagsView/updateVisitedView', route)\n    }\n  }\n}\n",null]}