{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\accounts\\reconciliation\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\accounts\\reconciliation\\index.vue","mtime":1602844945000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {\n  reconciliationListApi,\n  reconciliationStatusApi,\n  reconciliationMarkApi,\n} from \"@/api/accounts\";\nimport { roterPre } from \"@/settings\";\nexport default {\n  name: \"Record\",\n  data() {\n    return {\n      loading: false,\n      roterPre: roterPre,\n      timeVal: [],\n      pickerOptions: {\n        shortcuts: [\n          {\n            text: \"最近一周\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\n              picker.$emit(\"pick\", [start, end]);\n            },\n          },\n          {\n            text: \"最近一个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\n              picker.$emit(\"pick\", [start, end]);\n            },\n          },\n          {\n            text: \"最近三个月\",\n            onClick(picker) {\n              const end = new Date();\n              const start = new Date();\n              start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\n              picker.$emit(\"pick\", [start, end]);\n            },\n          },\n        ],\n      },\n      listLoading: true,\n      tableData: {\n        data: [],\n        total: 0,\n      },\n      tableFrom: {\n        page: 1,\n        limit: 10,\n        date: \"\",\n        status: \"\",\n        keyword: '',\n        reconciliation_id: this.$route.query.reconciliation_id ? this.$route.query.reconciliation_id : \"\"\n      },\n      ruleForm: {\n        status: \"2\",\n      },\n      dialogVisible: false,\n      rules: {\n        status: [\n          { required: true, message: \"请选择转账状态\", trigger: \"change\" },\n        ],\n      },\n      reconciliationId: 0,\n    };\n  },\n  mounted() {\n    this.getList();\n  },\n  methods: {\n    onMark(id) {\n      this.$modalForm(reconciliationMarkApi(id)).then(() => this.getList());\n    },\n    onAccounts(id) {\n      this.reconciliationId = id;\n      this.dialogVisible = true;\n    },\n    handleClose() {\n      this.dialogVisible = false;\n      this.$refs[\"ruleForm\"].resetFields();\n    },\n    submitForm(formName) {\n      this.$refs[formName].validate((valid) => {\n        if (valid) {\n          this.loading = true;\n          reconciliationStatusApi(this.reconciliationId, this.ruleForm)\n            .then((res) => {\n              this.$message.success(res.message);\n              this.loading = false;\n              this.handleClose();\n              this.getList();\n            })\n            .catch((res) => {\n              this.$message.error(res.message);\n              this.loading = false;\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e;\n      this.tableFrom.date = this.timeVal ? this.timeVal.join(\"-\") : \"\";\n      this.tableFrom.page = 1;\n      this.getList();\n    },\n    // 列表\n    getList(num) {\n      this.listLoading = true;\n      this.tableFrom.page = num ? num : this.tableFrom.page;\n      reconciliationListApi(this.tableFrom)\n        .then((res) => {\n          this.tableData.data = res.data.list;\n          this.tableData.total = res.data.count;\n          this.listLoading = false;\n        })\n        .catch((res) => {\n          this.listLoading = false;\n          this.$message.error(res.message);\n        });\n    },\n    pageChange(page) {\n      this.tableFrom.page = page;\n      this.getList();\n    },\n    handleSizeChange(val) {\n      this.tableFrom.limit = val;\n      this.chkName = \"\";\n      this.getList();\n    },\n  },\n};\n",null]}