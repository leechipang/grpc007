{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\login\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\login\\index.vue","mtime":1612255397000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { captchaApi, loginConfigApi } from \"@/api/user\";\nimport notice from \"@/libs/notice\";\nimport \"@/assets/js/canvas-nest.min\";\nimport Cookies from \"js-cookie\";\nexport default {\n  name: \"Login\",\n  data() {\n    const validateUsername = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error(\"请输入用户名\"));\n      } else {\n        callback();\n      }\n    };\n    const validatePassword = (rule, value, callback) => {\n      if (!value) {\n        callback(new Error(\"请输入密码\"));\n      } else {\n        if (value.length < 6) {\n          callback(new Error(\"请输入不少于6位数的密码\"));\n        } else {\n          callback();\n        }\n      }\n    };\n    return {\n      fullWidth: document.body.clientWidth,\n      swiperOption: {\n        pagination: {\n          el: \".pagination\"\n        },\n        autoplay: {\n          enabled: true,\n          disableOnInteraction: false,\n          delay: 3000\n        }\n      },\n      loginLogo: \"\",\n      swiperList: [],\n      captchatImg: \"\",\n      loginForm: {\n        account: \"\",\n        password: \"\",\n        key: \"\",\n        code: \"\"\n      },\n      loginRules: {\n        account: [\n          { required: true, trigger: \"blur\", validator: validateUsername }\n        ],\n        password: [\n          { required: true, trigger: \"blur\", validator: validatePassword }\n        ],\n        code: [\n          { required: true, message: \"请输入正确的验证码\", trigger: \"blur\" }\n        ]\n      },\n      passwordType: \"password\",\n      capsTooltip: false,\n      loading: false,\n      showDialog: false,\n      redirect: undefined,\n      otherQuery: {}\n    };\n  },\n  watch: {\n    fullWidth(val) {\n      // 为了避免频繁触发resize函数导致页面卡顿，使用定时器\n      if (!this.timer) {\n        // 一旦监听到的screenWidth值改变，就将其重新赋给data里的screenWidth\n        this.screenWidth = val;\n        this.timer = true;\n        const that = this;\n        setTimeout(function() {\n          // 打印screenWidth变化的值\n          that.timer = false;\n        }, 400);\n      }\n    },\n    $route: {\n      handler: function(route) {\n        const query = route.query;\n        if (query) {\n          this.redirect = query.redirect;\n          this.otherQuery = this.getOtherQuery(query);\n        }\n      },\n      immediate: true\n    }\n  },\n  created() {\n    const _this = this;\n    document.onkeydown = function(e) {\n      if (_this.$route.path.indexOf(\"login\") !== -1) {\n        const key = window.event.keyCode;\n        if (key === 13) {\n          _this.handleLogin();\n        }\n      }\n    };\n    window.addEventListener(\"resize\", this.handleResize);\n  },\n  mounted() {\n    console.log(this.title);\n    this.getInfo();\n    this.$nextTick(() => {\n      if (this.screenWidth < 768) {\n        document\n          .getElementsByTagName(\"canvas\")[0]\n          .removeAttribute(\"class\", \"index_bg\");\n      } else {\n        document.getElementsByTagName(\"canvas\")[0].className = \"index_bg\";\n      }\n    });\n    this.getCaptcha();\n  },\n  beforeCreate() {\n    if (this.fullWidth < 768) {\n      document\n        .getElementsByTagName(\"canvas\")[0]\n        .removeAttribute(\"class\", \"index_bg\");\n    } else {\n      document.getElementsByTagName(\"canvas\")[0].className = \"index_bg\";\n    }\n  },\n  beforeDestroy: function() {\n    window.removeEventListener(\"resize\", this.handleResize);\n    document\n      .getElementsByTagName(\"canvas\")[0]\n      .removeAttribute(\"class\", \"index_bg\");\n  },\n  destroyed() {\n    // window.removeEventListener('storage', this.afterQRScan)\n  },\n  methods: {\n    getInfo() {\n      loginConfigApi()\n        .then(({ data }) => {\n          this.swiperList = data.login_banner;\n          this.loginLogo = data.login_logo;\n          Cookies.set(\"MerInfo\", JSON.stringify(data));\n          console.log(Cookies.get(\"MerInfo\"));\n        })\n        .catch(({ message }) => {\n          this.$message.error(message);\n        });\n    },\n    getCaptcha() {\n      captchaApi()\n        .then(({ data }) => {\n          this.captchatImg = data.captcha;\n          this.loginForm.key = data.key;\n        })\n        .catch(({ message }) => {\n          this.$message.error(message);\n        });\n    },\n    checkCapslock(e) {\n      const { key } = e;\n      this.capsTooltip = key && key.length === 1 && key >= \"A\" && key <= \"Z\";\n    },\n    showPwd() {\n      if (this.passwordType === \"password\") {\n        this.passwordType = \"\";\n      } else {\n        this.passwordType = \"password\";\n      }\n      this.$nextTick(() => {\n        this.$refs.password.focus();\n      });\n    },\n    handleLogin() {\n      this.$refs[\"loginForm\"].validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.$store\n            .dispatch(\"user/login\", this.loginForm)\n            .then(res => {\n              this.$router.push({\n                path: this.redirect || \"/\",\n                query: this.otherQuery\n              });\n              this.loading = false;\n              this.$root.notice = notice(res.token);\n            })\n            .catch(error => {\n              this.loginForm.code = \"\";\n              this.$message.error(error.message);\n              this.loading = false;\n              this.getCaptcha();\n            });\n        } else {\n          return false;\n        }\n      });\n    },\n    getOtherQuery(query) {\n      return Object.keys(query).reduce((acc, cur) => {\n        if (cur !== \"redirect\") {\n          acc[cur] = query[cur];\n        }\n        return acc;\n      }, {});\n    },\n    handleResize(event) {\n      this.fullWidth = document.body.clientWidth;\n      if (this.fullWidth < 768) {\n        document\n          .getElementsByTagName(\"canvas\")[0]\n          .removeAttribute(\"class\", \"index_bg\");\n      } else {\n        document.getElementsByTagName(\"canvas\")[0].className = \"index_bg\";\n      }\n    }\n  }\n};\n",null]}