{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\marketing\\seckill\\seckillGoods\\index.vue?vue&type=template&id=4986582d&scoped=true&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\marketing\\seckill\\seckillGoods\\index.vue","mtime":1601375610000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"divBox\" },\n    [\n      _c(\n        \"el-card\",\n        { staticClass: \"box-card\" },\n        [\n          _c(\n            \"div\",\n            {\n              staticClass: \"clearfix\",\n              attrs: { slot: \"header\" },\n              slot: \"header\"\n            },\n            [\n              _c(\n                \"el-tabs\",\n                {\n                  on: {\n                    \"tab-click\": function($event) {\n                      return _vm.getList(1)\n                    }\n                  },\n                  model: {\n                    value: _vm.tableFrom.type,\n                    callback: function($$v) {\n                      _vm.$set(_vm.tableFrom, \"type\", $$v)\n                    },\n                    expression: \"tableFrom.type\"\n                  }\n                },\n                _vm._l(_vm.headeNum, function(item, index) {\n                  return _c(\"el-tab-pane\", {\n                    key: index,\n                    attrs: {\n                      name: item.type.toString(),\n                      label: item.name + \"(\" + item.count + \")\"\n                    }\n                  })\n                }),\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"div\", { staticClass: \"container\" }, [\n                _c(\n                  \"div\",\n                  { staticClass: \"demo-input-suffix acea-row\" },\n                  [\n                    _c(\n                      \"el-form\",\n                      { attrs: { inline: \"\", size: \"small\" } },\n                      [\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"秒杀状态：\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticClass: \"filter-item selWidth mr20\",\n                                attrs: { placeholder: \"请选择\", clearable: \"\" },\n                                on: {\n                                  change: function($event) {\n                                    return _vm.getList(1)\n                                  }\n                                },\n                                model: {\n                                  value: _vm.tableFrom.seckill_status,\n                                  callback: function($$v) {\n                                    _vm.$set(\n                                      _vm.tableFrom,\n                                      \"seckill_status\",\n                                      $$v\n                                    )\n                                  },\n                                  expression: \"tableFrom.seckill_status\"\n                                }\n                              },\n                              _vm._l(_vm.seckillStatusList, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.value,\n                                  attrs: {\n                                    label: item.label,\n                                    value: item.value\n                                  }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"商户名称：\" } },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticClass: \"selWidth\",\n                                attrs: {\n                                  clearable: \"\",\n                                  filterable: \"\",\n                                  placeholder: \"请选择\"\n                                },\n                                on: {\n                                  change: function($event) {\n                                    return _vm.getList(1)\n                                  }\n                                },\n                                model: {\n                                  value: _vm.tableFrom.mer_id,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.tableFrom, \"mer_id\", $$v)\n                                  },\n                                  expression: \"tableFrom.mer_id\"\n                                }\n                              },\n                              _vm._l(_vm.merSelect, function(item) {\n                                return _c(\"el-option\", {\n                                  key: item.mer_id,\n                                  attrs: {\n                                    label: item.mer_name,\n                                    value: item.mer_id\n                                  }\n                                })\n                              }),\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-form-item\",\n                          {\n                            staticStyle: { display: \"inline-block\" },\n                            attrs: { label: \"商户类别：\" }\n                          },\n                          [\n                            _c(\n                              \"el-select\",\n                              {\n                                staticClass: \"selWidth\",\n                                attrs: { clearable: \"\", placeholder: \"请选择\" },\n                                on: {\n                                  change: function($event) {\n                                    return _vm.getList(1)\n                                  }\n                                },\n                                model: {\n                                  value: _vm.tableFrom.is_trader,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.tableFrom, \"is_trader\", $$v)\n                                  },\n                                  expression: \"tableFrom.is_trader\"\n                                }\n                              },\n                              [\n                                _c(\"el-option\", {\n                                  attrs: { label: \"自营\", value: \"1\" }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"el-option\", {\n                                  attrs: { label: \"非自营\", value: \"0\" }\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-form-item\",\n                          { attrs: { label: \"商品搜索：\" } },\n                          [\n                            _c(\n                              \"el-input\",\n                              {\n                                staticClass: \"selWidth\",\n                                attrs: {\n                                  placeholder:\n                                    \"请输入商品名称，关键字，产品编号\"\n                                },\n                                model: {\n                                  value: _vm.tableFrom.keyword,\n                                  callback: function($$v) {\n                                    _vm.$set(_vm.tableFrom, \"keyword\", $$v)\n                                  },\n                                  expression: \"tableFrom.keyword\"\n                                }\n                              },\n                              [\n                                _c(\"el-button\", {\n                                  attrs: {\n                                    slot: \"append\",\n                                    icon: \"el-icon-search\"\n                                  },\n                                  on: {\n                                    click: function($event) {\n                                      return _vm.getList(1)\n                                    }\n                                  },\n                                  slot: \"append\"\n                                })\n                              ],\n                              1\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    )\n                  ],\n                  1\n                )\n              ]),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: _vm.tableFrom.type === \"6\",\n                      expression: \"tableFrom.type === '6'\"\n                    }\n                  ],\n                  attrs: { size: \"mini\" },\n                  on: { click: _vm.batch }\n                },\n                [_vm._v(\"批量审核\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-button\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: Number(_vm.tableFrom.type) < 3,\n                      expression: \"Number(tableFrom.type) < 3\"\n                    }\n                  ],\n                  staticStyle: { \"margin-left\": \"0px\" },\n                  attrs: { size: \"mini\" },\n                  on: { click: _vm.batchOff }\n                },\n                [_vm._v(\"批量强制下架\")]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.listLoading,\n                  expression: \"listLoading\"\n                }\n              ],\n              staticStyle: { width: \"100%\" },\n              attrs: { data: _vm.tableData.data, size: \"mini\" },\n              on: { \"selection-change\": _vm.handleSelectionChange }\n            },\n            [\n              Number(_vm.tableFrom.type) < 7\n                ? _c(\"el-table-column\", {\n                    key: \"2\",\n                    attrs: { type: \"selection\", width: \"55\" }\n                  })\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { type: \"expand\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-form\",\n                          {\n                            staticClass: \"demo-table-expand\",\n                            attrs: { \"label-position\": \"left\", inline: \"\" }\n                          },\n                          [\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { label: \"平台分类：\" } },\n                              [\n                                _c(\"span\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      scope.row.storeCategory\n                                        ? scope.row.storeCategory.cate_name\n                                        : \"-\"\n                                    )\n                                  )\n                                ])\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"el-form-item\", { attrs: { label: \"品牌：\" } }, [\n                              _c(\"span\", [\n                                _vm._v(\n                                  _vm._s(\n                                    scope.row.brand\n                                      ? scope.row.brand.brand_name\n                                      : \"-\"\n                                  )\n                                )\n                              ])\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { label: \"市场价格：\" } },\n                              [\n                                _c(\"span\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"filterEmpty\")(scope.row.ot_price)\n                                    )\n                                  )\n                                ])\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { label: \"成本价：\" } },\n                              [\n                                _c(\"span\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"filterEmpty\")(scope.row.cost)\n                                    )\n                                  )\n                                ])\n                              ]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"el-form-item\", { attrs: { label: \"收藏：\" } }, [\n                              _c(\"span\", [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm._f(\"filterEmpty\")(scope.row.care_count)\n                                  )\n                                )\n                              ])\n                            ]),\n                            _vm._v(\" \"),\n                            _c(\n                              \"el-form-item\",\n                              { attrs: { label: \"虚拟销量：\" } },\n                              [\n                                _c(\"span\", [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm._f(\"filterEmpty\")(scope.row.ficti)\n                                    )\n                                  )\n                                ])\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"product_id\", label: \"ID\", \"min-width\": \"50\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"商户名称\", \"min-width\": \"120\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", [\n                          _vm._v(\n                            _vm._s(\n                              scope.row.merchant\n                                ? scope.row.merchant.mer_name\n                                : \"\"\n                            )\n                          )\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"mer_name\",\n                  label: \"商户类别\",\n                  \"min-width\": \"90\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        scope.row.merchant\n                          ? _c(\"span\", { staticClass: \"spBlock\" }, [\n                              _vm._v(\n                                _vm._s(\n                                  scope.row.merchant.is_trader\n                                    ? \"自营\"\n                                    : \"非自营\"\n                                )\n                              )\n                            ])\n                          : _vm._e()\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"商品图\", \"min-width\": \"80\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"div\",\n                          { staticClass: \"demo-image__preview\" },\n                          [\n                            _c(\"el-image\", {\n                              staticStyle: { width: \"36px\", height: \"36px\" },\n                              attrs: {\n                                src: scope.row.image,\n                                \"preview-src-list\": [scope.row.image]\n                              }\n                            })\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"store_name\",\n                  label: \"活动标题\",\n                  \"min-width\": \"180\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"price\", label: \"商品售价\", \"min-width\": \"90\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"sales\", label: \"销量\", \"min-width\": \"90\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"限量剩余\", \"min-width\": \"90\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", [\n                          _vm._v(_vm._s(scope.row.stock - scope.row.sales))\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"sort\", label: \"排序\", \"min-width\": \"70\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  prop: \"status\",\n                  label: \"是否显示\",\n                  \"min-width\": \"100\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-switch\", {\n                          attrs: {\n                            \"active-value\": 1,\n                            \"inactive-value\": 0,\n                            \"active-text\": \"显示\",\n                            \"inactive-text\": \"隐藏\"\n                          },\n                          on: {\n                            change: function($event) {\n                              return _vm.onchangeIsShow(scope.row)\n                            }\n                          },\n                          model: {\n                            value: scope.row.is_used,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"is_used\", $$v)\n                            },\n                            expression: \"scope.row.is_used\"\n                          }\n                        })\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { prop: \"stock\", label: \"秒杀状态\", \"min-width\": \"90\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"span\", [\n                          _vm._v(\n                            _vm._s(\n                              _vm._f(\"seckillStatusFilter\")(\n                                scope.row.seckill_status\n                              )\n                            )\n                          )\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"秒杀活动日期\", \"min-width\": \"160\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"div\", [\n                          _vm._v(\n                            \"开始日期：\" +\n                              _vm._s(\n                                scope.row.seckillActive &&\n                                  scope.row.seckillActive.start_day\n                                  ? scope.row.seckillActive.start_day.slice(\n                                      0,\n                                      10\n                                    )\n                                  : \"\"\n                              )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", [\n                          _vm._v(\n                            \"结束日期：\" +\n                              _vm._s(\n                                scope.row.seckillActive &&\n                                  scope.row.seckillActive.end_day\n                                  ? scope.row.seckillActive.end_day.slice(0, 10)\n                                  : \"\"\n                              )\n                          )\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"秒杀活动时间\", \"min-width\": \"130\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"div\", [\n                          _vm._v(\n                            \"开始时间：\" +\n                              _vm._s(\n                                scope.row.seckillActive &&\n                                  scope.row.seckillActive.start_time\n                                  ? scope.row.seckillActive.start_time + \":00\"\n                                  : \"\"\n                              )\n                          )\n                        ]),\n                        _vm._v(\" \"),\n                        _c(\"div\", [\n                          _vm._v(\n                            \"结束时间：\" +\n                              _vm._s(\n                                scope.row.seckillActive &&\n                                  scope.row.seckillActive.end_time\n                                  ? scope.row.seckillActive.end_time + \":00\"\n                                  : \"\"\n                              )\n                          )\n                        ])\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              Number(_vm.tableFrom.type) < 7\n                ? _c(\"el-table-column\", {\n                    key: \"8\",\n                    attrs: {\n                      label: \"操作\",\n                      \"min-width\": \"100\",\n                      fixed: \"right\",\n                      align: \"center\"\n                    },\n                    scopedSlots: _vm._u(\n                      [\n                        {\n                          key: \"default\",\n                          fn: function(scope) {\n                            return [\n                              Number(_vm.tableFrom.type) < 7\n                                ? _c(\n                                    \"el-button\",\n                                    {\n                                      attrs: { type: \"text\", size: \"small\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.onEdit(\n                                            scope.row.product_id\n                                          )\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"编辑\")]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              _vm.tableFrom.type === \"6\"\n                                ? _c(\n                                    \"el-button\",\n                                    {\n                                      attrs: { type: \"text\", size: \"small\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.toExamine(\n                                            scope.row.product_id\n                                          )\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"审核\")]\n                                  )\n                                : _vm._e(),\n                              _vm._v(\" \"),\n                              Number(_vm.tableFrom.type) < 3\n                                ? _c(\n                                    \"el-button\",\n                                    {\n                                      attrs: { type: \"text\", size: \"small\" },\n                                      on: {\n                                        click: function($event) {\n                                          return _vm.toOff([\n                                            scope.row.product_id\n                                          ])\n                                        }\n                                      }\n                                    },\n                                    [_vm._v(\"强制下架\")]\n                                  )\n                                : _vm._e()\n                            ]\n                          }\n                        }\n                      ],\n                      null,\n                      false,\n                      2644917324\n                    )\n                  })\n                : _vm._e()\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"block\" },\n            [\n              _c(\"el-pagination\", {\n                attrs: {\n                  \"page-sizes\": [20, 40, 60, 80],\n                  \"page-size\": _vm.tableFrom.limit,\n                  \"current-page\": _vm.tableFrom.page,\n                  layout: \"total, sizes, prev, pager, next, jumper\",\n                  total: _vm.tableData.total\n                },\n                on: {\n                  \"size-change\": _vm.handleSizeChange,\n                  \"current-change\": _vm.pageChange\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"info-from\", {\n        ref: \"infoFrom\",\n        attrs: { \"is-show\": _vm.isShow, ids: _vm.OffId },\n        on: { subSuccess: _vm.subSuccess }\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            title: \"商品编辑\",\n            visible: _vm.dialogVisible,\n            width: \"1000px\",\n            \"before-close\": _vm.handleClose\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.dialogVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.fullscreenLoading,\n                  expression: \"fullscreenLoading\"\n                }\n              ],\n              ref: \"formValidate\",\n              staticClass: \"formValidate mt20\",\n              attrs: {\n                rules: _vm.ruleValidate,\n                model: _vm.formValidate,\n                \"label-width\": \"100px\"\n              },\n              nativeOn: {\n                submit: function($event) {\n                  $event.preventDefault()\n                }\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"商品名称：\", prop: \"store_name\" } },\n                [\n                  _c(\"el-input\", {\n                    attrs: { placeholder: \"请输入商品名称\" },\n                    model: {\n                      value: _vm.formValidate.store_name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formValidate, \"store_name\", $$v)\n                      },\n                      expression: \"formValidate.store_name\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"商品推荐：\" } },\n                [\n                  _c(\n                    \"el-checkbox-group\",\n                    {\n                      attrs: { size: \"small\" },\n                      on: { change: _vm.onChangeGroup },\n                      model: {\n                        value: _vm.checkboxGroup,\n                        callback: function($$v) {\n                          _vm.checkboxGroup = $$v\n                        },\n                        expression: \"checkboxGroup\"\n                      }\n                    },\n                    _vm._l(_vm.recommend, function(item, index) {\n                      return _c(\n                        \"el-checkbox\",\n                        { key: index, attrs: { label: item.value } },\n                        [_vm._v(_vm._s(item.name))]\n                      )\n                    }),\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"排序：\" } },\n                [\n                  _c(\"el-input-number\", {\n                    attrs: { label: \"排序\" },\n                    model: {\n                      value: _vm.formValidate.rank,\n                      callback: function($$v) {\n                        _vm.$set(_vm.formValidate, \"rank\", $$v)\n                      },\n                      expression: \"formValidate.rank\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-col\",\n                { attrs: { span: 24 } },\n                [\n                  _c(\n                    \"el-form-item\",\n                    { attrs: { label: \"商品详情：\" } },\n                    [\n                      _c(\"ueditor-from\", {\n                        attrs: { content: _vm.formValidate.content },\n                        model: {\n                          value: _vm.formValidate.content,\n                          callback: function($$v) {\n                            _vm.$set(_vm.formValidate, \"content\", $$v)\n                          },\n                          expression: \"formValidate.content\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { staticStyle: { \"margin-top\": \"30px\" } },\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      staticClass: \"submission\",\n                      attrs: { type: \"primary\", size: \"small\" },\n                      on: {\n                        click: function($event) {\n                          return _vm.handleSubmit(\"formValidate\")\n                        }\n                      }\n                    },\n                    [_vm._v(\"提交\")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}