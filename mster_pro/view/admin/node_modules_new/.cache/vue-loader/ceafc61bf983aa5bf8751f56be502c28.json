{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\dashboard\\components\\userData.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\dashboard\\components\\userData.vue","mtime":1612255397000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { userDataApi } from \"@/api/home\";\nimport echartsFrom from \"@/components/echarts/index\";\nexport default {\n  name: \"UserData\",\n  components: { echartsFrom },\n  data() {\n    return {\n      style: { height: \"400px\" },\n      optionData: {},\n      name: \"最近30天\",\n      fromList: {\n        title: \"选择时间\",\n        custom: true,\n        fromTxt: [\n          { text: \"最近7天\", val: \"lately7\" },\n          { text: \"最近30天\", val: \"lately30\" },\n          { text: \"本月\", val: \"month\" }\n        ]\n      }\n    };\n  },\n  mounted() {\n    this.getList(\"lately30\");\n  },\n  methods: {\n    setTime(val, text) {\n      this.name = text;\n      this.getList(val);\n    },\n    getList(val) {\n      userDataApi({ date: val })\n        .then(res => {\n          console.log(res);\n          if (res.status === 200) {\n            const userData = res.data;\n            const visitList = [];\n            const newUserList = [];\n            const userList = [];\n            const timer = [];\n            userData.map(item => {\n              newUserList.push(item.new);\n              userList.push(item.total);\n              visitList.push(item.visit);\n              timer.push(item.day);\n            });\n            const seriesData = [\n              {\n                name: \"新用户\",\n                type: \"line\",\n                stack: \"用户量\",\n                itemStyle: {\n                  normal: {\n                    color: \"#5AD8A6\",\n                    lineStyle: {\n                      color: \"#5AD8A6\"\n                    }\n                  }\n                },\n                data: newUserList,\n                smooth: false\n              },\n              {\n                name: \"访问用户\",\n                type: \"line\",\n                stack: \"用户量\",\n                itemStyle: {\n                  normal: {\n                    color: \"#5D7092\",\n                    lineStyle: {\n                      color: \"#5D7092\"\n                    }\n                  }\n                },\n                data: visitList,\n                smooth: false\n              },\n              {\n                name: \"累计用户\",\n                type: \"line\",\n                stack: \"用户量\",\n                yAxisIndex: 1,\n\n                itemStyle: {\n                  normal: {\n                    color: \"#5B8FF9\",\n                    lineStyle: {\n                      color: \"#5B8FF9\"\n                    }\n                  }\n                },\n                data: userList,\n                smooth: false\n              }\n            ];\n            this.optionData = {\n              tooltip: {\n                trigger: \"axis\",\n                axisPointer: {\n                  type: \"cross\",\n                  label: {\n                    backgroundColor: \"#6a7985\"\n                  }\n                }\n              },\n              legend: {\n                x: \"1px\",\n                y: \"10px\",\n                data: [\"新用户\", \"访问用户\", \"累计用户\"]\n              },\n              grid: {\n                left: \"0%\",\n                right: \"4%\",\n                bottom: \"3%\",\n                containLabel: true\n              },\n\n              axisLine: {\n                show: false\n              },\n              xAxis: [\n                {\n                  type: \"category\",\n                  boundaryGap: true,\n                  axisLine: {\n                    show: false\n                  },\n                  axisTick: {\n                    alignWithLabel: true,\n                    lineStyle: {\n                      color: \"#D7DDE4\"\n                    }\n                  },\n                  splitLine: {\n                    show: false\n                  },\n                  axisLabel: {\n                    interval: 0,\n                    rotate: 40,\n                    textStyle: {\n                      color: \"#7F8B9C\"\n                    }\n                  },\n                  data: Array.from(new Set(timer))\n                }\n              ],\n              yAxis: [\n                {\n                  name: \"新/访\",\n                  type: \"value\",\n                  inverse: false,\n                  boundaryGap: [\"0\", \"0.1\"],\n                  // splitLine: {\n                  //   show: false\n                  // }\n                },\n                {\n                  name: \"累计用户\",\n                  type: \"value\",\n                  // minInterval: 1,\n                  max: this.arrayMax(userList) + 20,\n                  min: this.arrayMin(userList) - 10,\n                  splitLine: {\n                    show: false\n                  }\n                }\n              ],\n              series: seriesData\n            };\n            this.listLoading = false;\n          }\n        })\n        .catch(res => {\n          this.$message.error(res.message);\n        });\n    },\n    arrayMin(arrs) {\n      var min = arrs[0];\n      for (var i = 1, ilen = arrs.length; i < ilen; i += 1) {\n        if (arrs[i] < min) {\n          min = arrs[i];\n        }\n      }\n      return min;\n    },\n    arrayMax(arrs) {\n      var max = arrs[0];\n      for (var i = 1, ilen = arrs.length; i < ilen; i++) {\n        if (arrs[i] > max) {\n          max = arrs[i];\n        }\n      }\n      return max;\n    }\n  }\n};\n",null]}