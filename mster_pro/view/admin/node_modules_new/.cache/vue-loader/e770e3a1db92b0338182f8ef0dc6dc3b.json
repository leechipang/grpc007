{"remainingRequest":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\promoter\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\src\\views\\promoter\\user\\index.vue","mtime":1612255397000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\phpstudy_pro\\WWW\\master\\view\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { promoterListApi, spreadListApi, spreadOrderListApi, spreadClearApi } from '@/api/promoter'\nimport { fromList } from '@/libs/constants.js'\nexport default {\n  name: 'AccountsUser',\n  data() {\n    return {\n      moren: require(\"@/assets/images/f.png\"),\n      cardLists: [],\n      timeVal: [],\n      tableData: {\n        data: [],\n        total: 0\n      },\n      listLoading: true,\n      tableFrom: {\n        paid: '',\n        date: '',\n        keyword: '',\n        page: 1,\n        limit: 20\n      },\n      fromList: fromList,\n      dialogVisible: false,\n      spreadData: {\n        data: [],\n        total: 0\n      },\n      spreadFrom: {\n        page: 1,\n        limit: 10,\n        date: '',\n        level: '',\n        keyword: ''\n      },\n      timeValSpread: [],\n      spreadLoading: false,\n      uid: '',\n      onName: ''\n    }\n  },\n  mounted() {\n    this.getList()\n  },\n  methods: {\n    // 从后台获取数据,重新排序\n    // changeSort (val) {\n    //   debugger\n    //   console.log(val) // column: {…} order: \"ascending\" prop: \"date\"\n    //   // 根据当前排序重新获取后台数据,一般后台会需要一个排序的参数\n    //\n    // },\n    // 清除\n    clearSpread(row) {\n      this.$modalSure('解除【' + row.nickname + '】的上级推广人吗').then(() => {\n        spreadClearApi(row.uid).then(({ message }) => {\n          this.$message.success(message)\n          this.getList()\n        }).catch(({ message }) => {\n          this.$message.error(message)\n        })\n      })\n    },\n    onSpread(uid, n) {\n      this.onName = n\n      this.uid = uid\n      this.dialogVisible = true\n      this.spreadFrom = {\n        page: 1,\n        limit: 10,\n        date: '',\n        level: '',\n        keyword: ''\n      }\n      this.getListSpread(uid)\n    },\n    handleClose() {\n      this.dialogVisible = false\n    },\n    // 选择时间\n    selectChangeSpread(tab) {\n      this.timeValSpread = []\n      this.spreadFrom.date = tab\n      this.onName === 'man' ? this.getListSpread(this.uid) : this.getSpreadOrderList(this.uid)\n    },\n    // 具体日期\n    onchangeTimeSpread(e) {\n      this.timeValSpread = e\n      this.spreadFrom.date = e ? this.timeValSpread.join('-') : ''\n      this.onName === 'man' ? this.getListSpread(this.uid) : this.getSpreadOrderList(this.uid)\n    },\n    onChanges() {\n      this.onName === 'man' ? this.getListSpread(this.uid) : this.getSpreadOrderList(this.uid)\n    },\n    // 推广人列表\n    getListSpread(uid) {\n      this.spreadLoading = true\n      spreadListApi(uid, this.spreadFrom).then(res => {\n        this.spreadData.data = res.data.list\n        this.spreadData.total = res.data.count\n        this.spreadLoading = false\n      }).catch((res) => {\n        this.$message.error(res.message)\n        this.spreadLoading = false\n      })\n    },\n    pageChangeSpread(page) {\n      this.spreadFrom.page = page\n      this.onName === 'man' ? this.getListSpread(this.uid) : this.getSpreadOrderList(this.uid)\n    },\n    handleSizeChangeSpread(val) {\n      this.spreadFrom.limit = val\n      this.onName === 'man' ? this.getListSpread(this.uid) : this.getSpreadOrderList(this.uid)\n    },\n    // 推广订单\n    onSpreadOrder(uid, n) {\n      this.uid = uid\n      this.onName = n\n      this.dialogVisible = true\n      this.spreadFrom = {\n        page: 1,\n        limit: 10,\n        date: '',\n        level: '',\n        keyword: ''\n      }\n      this.getSpreadOrderList(uid)\n    },\n    getSpreadOrderList(uid) {\n      this.spreadLoading = true\n      spreadOrderListApi(uid, this.spreadFrom).then(res => {\n        this.spreadData.data = res.data.list\n        this.spreadData.total = res.data.count\n        this.spreadLoading = false\n      }).catch((res) => {\n        this.$message.error(res.message)\n        this.spreadLoading = false\n      })\n    },\n    selectChange(tab) {\n      this.tableFrom.date = tab\n      this.timeVal = []\n      this.tableFrom.page = 1;\n      this.getList()\n    },\n    // 具体日期\n    onchangeTime(e) {\n      this.timeVal = e\n      this.tableFrom.date = e ? this.timeVal.join('-') : ''\n      this.tableFrom.page = 1;\n      this.getList()\n    },\n    // 列表\n    getList() {\n      this.listLoading = true\n      promoterListApi(this.tableFrom).then(res => {\n        this.tableData.data = res.data.list\n        this.tableData.total = res.data.count\n        this.listLoading = false\n      }).catch((res) => {\n        this.$message.error(res.message)\n        this.listLoading = false\n      })\n    },\n    pageChange(page) {\n      this.tableFrom.page = page\n      this.getList()\n    },\n    handleSizeChange(val) {\n      this.tableFrom.limit = val\n      this.getList()\n    }\n  }\n}\n",null]}